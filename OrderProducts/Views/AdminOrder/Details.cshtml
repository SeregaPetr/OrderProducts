@model OrderProducts.Models.Order

@{
    ViewBag.Title = "Детали заказа";
    int number = 1;
}

@using (Html.BeginForm("Process", "AdminOrder", new { id = Model.Id, status = Model.StatusOrder }))
{
    <div class="container mt-4">
        <h2 class="pl-3">@ViewBag.Title</h2>

        @Html.AntiForgeryToken()
        <div class="table-responsive">
            <table class="table table-striped table-dark table-bordered text-center">
                <thead>
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">
                            @Html.DisplayNameFor(model => model.OrderLines.First().Dish.NameDish)
                        </th>
                        <th scope="col">
                            @Html.DisplayNameFor(model => model.OrderLines.First().Dish.Price)
                        </th>
                        <th scope="col">
                            @Html.DisplayNameFor(model => model.OrderLines.First().Quantity)
                        </th>
                        <th scope="col">
                            @Html.DisplayNameFor(model => model.OrderLines.First().OrderLinePrice)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.OrderLines)
                    {
                        <tr>
                            <td class="p-2 ">
                                @(number++)
                            </td>
                            <td>
                                <div class="text-left">
                                    @Html.DisplayFor(modelItem => item.Dish.NameDish)
                                </div>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Dish.Price) грн.
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Quantity)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.OrderLinePrice) грн.
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="text-right pr-2 font-weight-bold text-uppercase">
            Сумма: @Model.OrderPrice грн.
        </div>

        <hr />
        <h3 class="text-center">Данные для доставки</h3>

        <div class="row justify-content-center mx-5  mt-3">
            <div class="col-lg-8 col-lg-offset-2">

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.User.FirstName, htmlAttributes: new { @class = "control-label pl-md-3" })

                            @Html.EditorFor(model => model.User.FirstName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="col-md-6 ">
                        <div class="form-group">
                            @Html.LabelFor(model => model.User.LastName, htmlAttributes: new { @class = "control-label pl-md-3" })

                            @Html.EditorFor(model => model.User.LastName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.User.Phone, htmlAttributes: new { @class = "control-label pl-md-3" })

                            @Html.EditorFor(model => model.User.Phone, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.User.Email, htmlAttributes: new { @class = "control-label pl-md-3" })

                            @Html.EditorFor(model => model.User.Email, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Address.Street, htmlAttributes: new { @class = "control-label pl-md-3" })

                            @Html.EditorFor(model => model.Address.Street, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Address.HouseNumber, htmlAttributes: new { @class = "control-label pl-md-3" })

                            @Html.EditorFor(model => model.Address.HouseNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Address.ApartmentNumber, htmlAttributes: new { @class = "control-label pl-md-3" })

                            @Html.EditorFor(model => model.Address.ApartmentNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.PaymentType.NamePaymentType, htmlAttributes: new { @class = "control-label pl-md-3" })

                            @Html.EditorFor(model => model.PaymentType.NamePaymentType, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.OrderDeliveryTime, htmlAttributes: new { @class = "control-label pl-md-3" })

                            @Html.EditorFor(model => model.OrderDeliveryTime, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label pl-md-3" })

                            @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control", rows = "4", @readonly = "readonly" } })
                        </div>
                    </div>
                </div>
                @if (Model.StatusOrder != "closed")
                {
                    <div class="form-group">
                        <input class="btn btn-primary btn-block" type="submit" value="@ViewBag.ButtonName">
                    </div>
                }
            </div>
        </div>
    </div>
}





@*
    <p>
        @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
        @Html.ActionLink("Back to List", "Index")
    </p>*@
